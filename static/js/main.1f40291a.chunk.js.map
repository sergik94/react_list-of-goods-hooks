{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setReversed","goods","visibleGoods","ALPHABET","LENGTH","sort","g1","g2","localeCompare","length","reverse","getReorderedGoods","className","type","onClick","hidden","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EAnCD,SACLA,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENG,EAAY,YAAOD,GAEzB,OAAQJ,GACN,KAAKL,EAASW,SACd,KAAKX,EAASY,OACZF,EAAaG,MAAK,SAACC,EAAIC,GACrB,OAAIV,IAAaL,EAASW,SACjBG,EAAGE,cAAcD,GAGnBD,EAAGG,OAASF,EAAGE,UAExB,MAEF,KAAKjB,EAASI,KACZ,MAEF,QACE,OAAOK,EAOX,OAJIF,GACFG,EAAaQ,UAGRR,EAMOS,CAAkBlB,EAAiB,CAAEI,WAAUE,eAE7D,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBf,IAAaL,EAASW,SAAW,GAAK,YACnEW,QAAS,kBAAMhB,EAAYN,EAASW,WAHtC,iCAQA,wBACEU,KAAK,SACLD,UAAS,4BAAuBf,IAAaL,EAASY,OAAS,GAAK,YACpEU,QAAS,kBAAMhB,EAAYN,EAASY,SAHtC,4BAQA,wBACES,KAAK,SACLD,UAAS,4BAAuBb,EAAa,GAAK,YAClDe,QAAS,kBAAMd,GAAaD,IAH9B,sBAQEF,IAAaL,EAASI,MAAQG,IAE5B,wBACEc,KAAK,SACLD,UAAU,4BACVG,OAAQlB,IAAaL,EAASI,OAASG,EACvCe,QAAS,WACPhB,EAAYN,EAASI,MACrBI,GAAaD,IANjB,sBAcN,6BACGE,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YC5GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1f40291a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n    case SortType.LENGTH:\n      visibleGoods.sort((g1, g2) => {\n        if (sortType === SortType.ALPHABET) {\n          return g1.localeCompare(g2);\n        }\n\n        return g1.length - g2.length;\n      });\n      break;\n\n    case SortType.NONE:\n      break;\n\n    default:\n      return goods;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setReversed] = useState(false);\n  const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType === SortType.ALPHABET ? '' : 'is-light'}`}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType === SortType.LENGTH ? '' : 'is-light'}`}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${isReversed ? '' : 'is-light'}`}\n          onClick={() => setReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              hidden={sortType === SortType.NONE && !isReversed}\n              onClick={() => {\n                setSortType(SortType.NONE);\n                setReversed(!isReversed);\n              }}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {goods.map(item => (\n          <li\n            key={item}\n            data-cy=\"Good\"\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}